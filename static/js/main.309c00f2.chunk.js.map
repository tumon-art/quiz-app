{"version":3,"sources":["SmallQuizApp/Options.js","SmallQuizApp/Data.js","SmallQuizApp/QuestionSec.js","SmallQuizApp/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Options","props","e","optionBtnClick","onClick","answerText","Data","questionText","answerOptions","isCorrect","QuestionSec","currentQuestion","className","length","Main","useState","setcurrentQuestion","showScore","setshowScore","Score","setScore","map","i","nextQuestion","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.309c00f2.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Options = (props) => {\n    const {e,optionBtnClick} = props\n    return (\n        <>\n            <div onClick={optionBtnClick}> {e.answerText} </div>\n            \n        </>\n    )\n}\n","const Data = [\n    {\n        questionText: 'What is the capital of Turkey?',\n        answerOptions: [\n            { answerText: 'New York', isCorrect: false },\n            { answerText: 'London', isCorrect: false },\n            { answerText: 'Ankara', isCorrect: true },\n            { answerText: 'Istanbul', isCorrect: false },\n        ],\n    },\n\n    {\n        questionText: 'Who is CEO of Tesla?',\n        answerOptions: [\n            { answerText: 'Jeff Bezos', isCorrect: false },\n            { answerText: 'Elon Musk', isCorrect: true },\n            { answerText: 'Bill Gates', isCorrect: false },\n            { answerText: 'Tony Stark', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'The iPhone was created by which company?',\n        answerOptions: [\n            { answerText: 'Apple', isCorrect: true },\n            { answerText: 'Intel', isCorrect: false },\n            { answerText: 'Amazon', isCorrect: false },\n            { answerText: 'Microsoft', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'What is the Capital of Iraq?',\n        answerOptions: [\n            { answerText: 'Riyad', isCorrect: false },\n            { answerText: 'Tehran', isCorrect: false },\n            { answerText: 'Doha', isCorrect: false },\n            { answerText: 'Bagdad', isCorrect: true },\n        ],\n    },\n    {\n        questionText: 'Who Created Linux?',\n        answerOptions: [\n            { answerText: 'Kevin Ryan', isCorrect: false },\n            { answerText: 'Jack Ma', isCorrect: false },\n            { answerText: 'Linus Torvalds', isCorrect: true },\n            { answerText: 'Michael Dell', isCorrect: false },\n        ],\n    },\n    {\n        questionText: 'Who Created Android?',\n        answerOptions: [\n            { answerText: 'Google', isCorrect: true },\n            { answerText: 'Nokia', isCorrect: false },\n            { answerText: 'Samsung', isCorrect: false },\n            { answerText: 'Sony', isCorrect: false },\n        ],\n    },\n\n]\n\nexport default Data;\n","export const QuestionSec = (props) => {\n    const {Data,currentQuestion} = props\n    return (\n        <>\n            <div className='question_section'> \n            <div className='question_count'>\n            <span> Questions {currentQuestion+1} </span>\n            <span> /{Data.length} </span>\n            </div> \n            <div className='question_text'>\n            {Data[currentQuestion].questionText}\n            </div>\n            </div>\n        </>\n    )\n}\n","\nimport { Options } from \"./Options\"\nimport \"../SmallQuizApp/Main.css\"\nimport Data from \"./Data\"\nimport { QuestionSec } from \"./QuestionSec\"\nimport { useState } from \"react\"\n\nexport const Main = () => {\n\n    // Current Question State\n    const [currentQuestion, setcurrentQuestion] = useState(0)\n\n    //Shwo Score at last\n    const [showScore, setshowScore] = useState(false)\n\n    // Total Score Count\n    const [Score, setScore] = useState(0)\n\n\n    // onClick on Options \n    const optionBtnClick = (isCorrect) => {\n        if (isCorrect === true) setScore(Score+1)\n\n        const nextQuestion = currentQuestion +1;\n        // nextQueston updates for getting new qus.\n        \n        if (nextQuestion < Data.length) {\n            setcurrentQuestion(nextQuestion)\n        } \n        \n        else setshowScore(true)\n    \n    }\n\n\n    return (\n        <div className='main'>\n        <div className='container'>\n            \n            {showScore ?\n                <div className='score_section'> You Scored {Score} out of {Data.length} </div>\n                 : <>\n                <QuestionSec Data={Data} currentQuestion={currentQuestion} />\n            <div className='answer_section'> \n            {Data[currentQuestion].answerOptions.map((e,i) => {\n                return <Options key={i} optionBtnClick={()=>optionBtnClick(e.isCorrect)} e={e}  />\n            })}\n            </div>\n            </>\n            }\n\n            \n        </div>\n        </div>\n    )\n}\n","import { Main } from \"./SmallQuizApp/Main\";\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}